{"version":3,"sources":["components/ChatInput.js","components/ChatMessage.js","firebase.js","components/Chat.js","components/Login.js","components/Header.js","Data/SidebarData.js","components/Sidebar.js","App.js","reportWebVitals.js","index.js"],"names":["ChatInput","sendMessage","useState","input","setInput","Container","InputContainer","onChange","e","target","value","type","placeholder","SendButton","onClick","preventDefault","styled","div","button","Send","SendIcon","ChatMessage","text","name","image","timestamp","UserAvatar","src","MessageContent","Name","Date","toDate","toUTCString","Text","span","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","auth","provider","GoogleAuthProvider","Chat","user","channelId","useParams","channel","setChannel","messages","setMessages","useEffect","collection","doc","onSnapshot","snapshot","data","orderBy","docs","map","Header","Channel","ChannelName","ChannelInfo","ChannelDetails","Info","MessageContainer","length","index","userImage","payload","Timestamp","now","photo","add","InfoOutlinedIcon","Login","props","Content","SlackImg","SignInButton","signInWithPopup","then","result","newUser","displayName","photoURL","localStorage","setItem","JSON","stringify","setUser","catch","error","alert","message","img","signOut","Main","SearchContainer","Search","UserContainer","UserImage","sidebarItemsData","icon","Sidebar","history","useHistory","WorkspaceContainer","NewMessage","MainChannels","item","MainChannelItem","ChannelsContainer","NewChannelContainer","promptName","prompt","ChannelsList","rooms","id","push","App","setRooms","parse","getItem","console","log","className","removeItem","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.21b805de.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport styled from 'styled-components'\r\nimport SendIcon from '@material-ui/icons/Send';\r\n\r\nfunction ChatInput({sendMessage}) {\r\n\r\n   const [input, setInput]=useState(\"\");\r\n\r\n   const send = (e) => {\r\n       e.preventDefault();\r\n\r\n       if(!input) return; \r\n\r\n       sendMessage(input)\r\n       setInput(\"\")\r\n   }\r\n\r\n\r\n    return (\r\n          <Container>\r\n              <InputContainer>\r\n\r\n              <form>\r\n                  <input \r\n                  onChange={(e)=>setInput(e.target.value)}\r\n                  value={input}\r\n                  type=\"text\" \r\n                  placeholder=\"Message Here..\">\r\n\r\n                  </input>\r\n\r\n                  <SendButton \r\n                  type=\"submit\"\r\n                  onClick={send}>\r\n\r\n                      <Send />\r\n                    \r\n                  </SendButton>\r\n\r\n              </form>\r\n              </InputContainer>\r\n          </Container>\r\n            \r\n       \r\n    )\r\n}\r\n\r\nexport default ChatInput\r\n\r\nconst Container = styled.div\r\n`\r\n\r\npadding-left: 20px;\r\npadding-right: 20px;\r\npadding-bottom: 24px;\r\n`\r\n\r\nconst InputContainer = styled.div\r\n`\r\n\r\n\r\nborder: 1px solid #8D8D8E;\r\nborder-radius:4px;\r\n\r\nform\r\n{\r\n    display:flex;\r\n    height:42px;\r\n    align-items:center;\r\n    padding-left:10px;\r\n\r\n    input{\r\n        flex:1;\r\n        border:none;\r\n        font-size:13px;\r\n    }\r\n\r\n    input:focus\r\n    {\r\n        outline: none;\r\n    }\r\n}\r\n\r\n`\r\n\r\nconst SendButton = styled.button\r\n`\r\n\r\nbackground: #007a5a;\r\nborder-radius:2px;\r\nwidth:32px;\r\nheight:32px;\r\ndisplay:flex;\r\njustify-content: center;\r\nalign-items: center;\r\nmargin-right:5px;\r\ncursor:pointer;\r\nborder:none;\r\n\r\n.MuiSvgIcon-root{\r\n    width: 18px;\r\n}\r\n\r\n:hover\r\n{\r\n    background: #148567\r\n}\r\n`\r\n\r\nconst Send = styled(SendIcon)\r\n`\r\ncolor: #D9D9D9;\r\n`","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nfunction ChatMessage({ text, name, image, timestamp}) {\r\n    return (\r\n        <Container>\r\n\r\n            <UserAvatar>\r\n                <img src={image}/>\r\n            </UserAvatar>\r\n             \r\n            <MessageContent>\r\n\r\n                <Name>\r\n                    {name}\r\n                    <span>\r\n                        {new Date(timestamp.toDate()).toUTCString()}\r\n                    </span>\r\n                </Name>\r\n                <Text>\r\n                    {text}\r\n                </Text>\r\n\r\n            </MessageContent>\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ChatMessage\r\n\r\nconst Container = styled.div\r\n`\r\npadding: 8px 20px;\r\ndisplay:flex;\r\nalign-items:center;\r\n\r\n`\r\n\r\nconst UserAvatar = styled.div\r\n`\r\nwidth:36px;\r\nheight:36px;\r\nborder-radius:2px;\r\noverflow:hidden;\r\nmargin-right:7px;\r\n\r\nimg{\r\n    width:100%;\r\n    \r\n}\r\n`\r\n\r\nconst MessageContent = styled.div\r\n`\r\ndisplay:flex;\r\nflex-direction:column;\r\n`\r\n\r\nconst Name = styled.span\r\n`\r\nfont-weight:900;\r\nfont-size:15px;\r\nline-height:1.4;\r\nmargin-right:8px;\r\nspan\r\n{\r\n    font-weight:400;\r\n    color: rgb(97,96,97);\r\n    font-size:13 px;\r\n}\r\n`\r\n\r\nconst Text =styled.span\r\n`\r\n`\r\n","import firebase from 'firebase'\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyC4hgI1PtFQkMZIOEQdT5kgg8UnXba3U3k\",\r\n    authDomain: \"slack-clone-9331a.firebaseapp.com\",\r\n    projectId: \"slack-clone-9331a\",\r\n    storageBucket: \"slack-clone-9331a.appspot.com\",\r\n    messagingSenderId: \"576950410025\",\r\n    appId: \"1:576950410025:web:436a4903ff9c12510b7538\"\r\n  };\r\n\r\n  const firebaseApp = firebase.initializeApp(firebaseConfig);\r\n  const db = firebaseApp.firestore();\r\n  const auth = firebase.auth();\r\n  const provider = new firebase.auth.GoogleAuthProvider();\r\n  \r\n  export { auth, provider }\r\n  export default db;\r\n\r\n  ","import React, { useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\r\nimport ChatInput from './ChatInput'\r\nimport ChatMessage from './ChatMessage'\r\nimport db from '../firebase'\r\nimport { useParams } from 'react-router-dom'\r\nimport firebase from 'firebase'\r\n\r\nfunction Chat({user}) {\r\n\r\n    let { channelId } = useParams();\r\n    const [ channel, setChannel] = useState();\r\n    const [ messages, setMessages ] = useState([])\r\n\r\n\r\n    const getMessages = () =>\r\n    {\r\n\r\n        db.collection('rooms')\r\n        .doc(channelId)\r\n        .collection('messages')\r\n        .orderBy('timestamp', 'asc')\r\n        .onSnapshot((snapshot) => {\r\n\r\n        let messages = snapshot.docs.map((doc)=>doc.data());\r\n         setMessages(messages);\r\n        })\r\n    }\r\n\r\n    const sendMessage = (text) =>\r\n    {\r\n        if(channelId)\r\n        {\r\n            let payload = {\r\n                text: text,\r\n                timestamp: firebase.firestore.Timestamp.now(),\r\n                user: user.name,\r\n                userImage: user.photo\r\n            }\r\n            db.collection(\"rooms\").doc(channelId).collection('messages').add(payload);\r\n        }\r\n    }\r\n    const getChannel = () =>\r\n    {\r\n        db.collection('rooms')\r\n        .doc(channelId)\r\n        .onSnapshot((snapshot)=>{\r\n\r\n                  setChannel(snapshot.data());\r\n        })\r\n    }\r\n    \r\n    useEffect(()=> {\r\n    \r\n\r\n        getChannel();\r\n        getMessages();\r\n\r\n    }, [channelId]\r\n    \r\n    )\r\n\r\n    return (\r\n        <Container>\r\n\r\n           <Header>\r\n                <Channel>\r\n\r\n                    <ChannelName>\r\n\r\n                        # {channel && channel.name}\r\n\r\n                    </ChannelName>\r\n\r\n                    <ChannelInfo>\r\n\r\n                        Fast and Reliable\r\n\r\n                    </ChannelInfo>\r\n                    \r\n                </Channel>\r\n                <ChannelDetails>\r\n                   <div>\r\n                   Details\r\n                   </div>\r\n                   <Info/>\r\n                   \r\n\r\n                </ChannelDetails> \r\n\r\n           </Header>\r\n        <MessageContainer>\r\n          {\r\n\r\n              messages.length > 0 &&\r\n              messages.map(( data, index)=>(\r\n                    \r\n                <ChatMessage\r\n                \r\n\r\n                 text={data.text}\r\n                 name={data.user}\r\n                 image={data.userImage}\r\n                 timestamp={data.timestamp}\r\n                />\r\n\r\n              ))\r\n          }\r\n            \r\n\r\n        </MessageContainer>\r\n\r\n        <ChatInput sendMessage={sendMessage} />\r\n         \r\n\r\n\r\n\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Chat\r\n\r\nconst Container = styled.div\r\n`\r\ndisplay:grid;\r\ngrid-template-rows: 64px auto min-content;\r\nmin-height: 0;\r\n\r\n`\r\nconst Header = styled.div\r\n`\r\n\r\npadding-left:20px;\r\npadding-right:20px;\r\ndisplay:flex;\r\nalign-items:center;\r\nborder-bottom: 1px solid rgba(83, 39, 83, .13);\r\njustify-content:space-between;\r\n`\r\nconst Channel = styled.div\r\n`\r\n`\r\n\r\nconst ChannelDetails = styled.div\r\n`\r\ndisplay:flex;\r\nalign-items:center;\r\ncolor: #606060;\r\n\r\n`\r\n\r\nconst ChannelName = styled.div\r\n`\r\n\r\nfont-weight:700;\r\npadding-top:\r\n\r\n\r\n`\r\nconst Info = styled(InfoOutlinedIcon)\r\n`\r\nmargin-left:10px;\r\n`\r\nconst ChannelInfo = styled.div\r\n`\r\nfont-weight:400;\r\ncolor:#606060;\r\nfont-size:13px;\r\nmargin-top:8px;\r\n`\r\n\r\nconst MessageContainer = styled.div\r\n`\r\n\r\ndisplay:flex;\r\nflex-direction: column;\r\noverflow-y: scroll;\r\n\r\n`\r\n\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { auth, provider } from '../firebase'\r\n\r\n\r\nfunction Login(props) {\r\n\r\n    const signIn = () => {\r\n        auth.signInWithPopup(provider)\r\n        .then((result)=>{\r\n\r\n            const newUser = {\r\n                name: result.user.displayName,\r\n                photo: result.user.photoURL,\r\n            }\r\n            localStorage.setItem('user', JSON.stringify(newUser));\r\n            props.setUser(newUser);\r\n        })  \r\n\r\n        .catch((error)=> {\r\n            alert(error.message)\r\n        })\r\n\r\n    }\r\n    return (\r\n  \r\n        <Container>\r\n           \r\n           <Content>\r\n               <SlackImg src=\"https://images-platform.99static.com//S1Ky2NtDVQVxbCDHJuQzDhB_kJU=/99x35:678x614/fit-in/500x500/99designs-contests-attachments/100/100947/attachment_100947757\"/>\r\n               <h1>Sign in!</h1>\r\n               <SignInButton onClick={()=>signIn()}>\r\n                   Sign-in with Google\r\n               </SignInButton>\r\n\r\n           </Content>\r\n           \r\n\r\n        </Container>\r\n    \r\n    )\r\n}\r\n\r\nexport default Login\r\n\r\nconst Container = styled.div\r\n`\r\nwidth:100%;\r\nheight:100vh;\r\nbackground-color: #f8f8f8;\r\ndisplay:flex;\r\njustify-content: center;\r\nalign-items: center;\r\nbackground-image: linear-gradient(#FD297A , #9424F0);\r\n`\r\nconst Content = styled.div\r\n`\r\nbackground: white;\r\npadding:100px;\r\nborder-radius:10%;\r\nbox-shadow: 0 1px 3px rgba(0 0 0 / 12%), 0 1px 2px rgb(0 0 0 / 24%);\r\ndisplay:flex;\r\nflex-direction:column;\r\njustify-content:center;\r\nalign-items:center;\r\n\r\n\r\n`\r\nconst SlackImg = styled.img\r\n`\r\nheight: 160px;\r\n\r\n`\r\n\r\nconst SignInButton = styled.button\r\n`\r\nmargin-top:50px;\r\nbackground: #9424F0;\r\ncolor: white;\r\nfont-weight: bold;\r\nbordeer:none;\r\nheight:40px;\r\nborder-radius:10px;\r\ncursor:pointer;\r\nfont-size:17px;\r\n\r\n\r\n`","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\r\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\r\n\r\nfunction Header({user,signOut}) {\r\n    return (\r\n        <Container>\r\n           <Main>\r\n               <AccessTimeIcon />\r\n\r\n                <SearchContainer>\r\n                    <Search>\r\n                        <input type=\"text\" placeholder=\"Search...\"/>\r\n                    </Search>\r\n                </SearchContainer>\r\n\r\n               <HelpOutlineIcon />\r\n           </Main>\r\n\r\n           <UserContainer>\r\n\r\n               <Name>\r\n                   {user.name}\r\n               </Name>\r\n               \r\n               <UserImage onClick={signOut}>\r\n                   <img src= {user.photo ? user.photo : \"https://imgur.com/6VBx3io.png\" } />\r\n               </UserImage>\r\n           </UserContainer>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Header\r\n\r\nconst Container = styled.div\r\n`\r\nbackground : #9424F0;\r\ncolor : white;\r\ndisplay : flex;\r\nalign-items: center;\r\njustify-content:center;\r\nposition:relative;\r\nbox-shadow:0 1px 0 0 rgb(225 225 225 / 10%);\r\n\r\n\r\n\r\n`\r\n\r\nconst Main = styled.div\r\n`\r\ndisplay : flex;\r\nmargin-left:16px;\r\nmargin-right:16px;\r\n\r\n`\r\n\r\nconst SearchContainer = styled.div\r\n`\r\nmin-width: 400px;\r\nmargin-left:16px;\r\nmargin-right:16px;\r\ncolour: white;\r\n\r\n`\r\n\r\nconst Search = styled.div\r\n`\r\nbox-shadow: inset 0 0 0 1px white;\r\nwidth: 100%;\r\nborder-radius: 6px;\r\ncolour:white;\r\n\r\n\r\ninput\r\n{\r\n    background-color:transparent;\r\n    border:none;\r\n    padding-left:8px;\r\n    padding-right:8px;\r\n    color:white;\r\n    padding-top:4px;\r\n    padding-bottom:4px;\r\n    ::placeholder { \r\n        color: white;\r\n        opacity: 1;\r\n      }\r\n}\r\ninput:focus\r\n{\r\n    outline:none;\r\n}\r\n`\r\nconst UserContainer = styled.div\r\n`\r\ndisplay:flex;\r\nalign-items: center;\r\npadding-right:16px;\r\nposition:absolute;\r\nright:0;\r\n\r\n\r\n`\r\nconst Name = styled.div\r\n`\r\npadding-right:16px;\r\n`\r\nconst UserImage = styled.div\r\n`\r\nheight:28px;\r\nwidth:28px;\r\nborder:1px solid white;\r\nborder-radius:2px;\r\nimg{\r\nwidth:100%;\r\nheight:100%;\r\ncursor:pointer;\r\n\r\n}\r\n\r\n\r\n`","import MessageIcon from '@material-ui/icons/Message';\r\nimport InboxIcon from '@material-ui/icons/Inbox';\r\nimport DraftsIcon from '@material-ui/icons/Drafts';\r\nimport BookmarkBorderIcon from '@material-ui/icons/BookmarkBorder';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\n\r\n\r\nexport const sidebarItemsData = [\r\n    {\r\n        icon: <MessageIcon/>,\r\n        text: \"Thread\"\r\n    },\r\n\r\n    {\r\n        icon: <InboxIcon/>,\r\n        text: \"All DMs\"\r\n    },\r\n\r\n    {\r\n        icon: <DraftsIcon/>,\r\n        text: \"Mentions & Reactions\"\r\n    },\r\n\r\n    {\r\n        icon: <BookmarkBorderIcon/>,\r\n        text: \"Save Items\"\r\n    },\r\n\r\n    {\r\n        icon: <PeopleIcon/>,\r\n        text: \"People & Groups\"\r\n    },\r\n\r\n    {\r\n        icon: <AppsIcon/>,\r\n        text: \"More\"\r\n    }\r\n]","\r\nimport React from 'react'\r\nimport styled from 'styled-components'\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport { sidebarItemsData } from '../Data/SidebarData'\r\nimport { allChannelsData } from '../Data/ChannelData'\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport db from '../firebase'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nfunction Sidebar(props) {\r\n   \r\n    const history = useHistory();\r\n\r\n    const goToChannel = (id) => {\r\n        if(id){\r\n           history.push(`/room/${id}`)\r\n        }\r\n    }\r\n\r\n    const addChannel = () => {\r\n        const promptName = prompt(\"Enter Channel Name\")\r\n        \r\n        if(promptName){\r\n\r\n            db.collection('rooms').add({\r\n                name: promptName\r\n            })\r\n        }\r\n    }\r\n    return (\r\n       \r\n            <Container>\r\n                <WorkspaceContainer>\r\n                    <Name>\r\n                        Ansh Dalwadi\r\n                    </Name>\r\n                    <NewMessage>\r\n                        <AddCircleOutlineIcon/>\r\n\r\n                    </NewMessage>\r\n                </WorkspaceContainer>\r\n\r\n                <MainChannels>\r\n                    {\r\n                        sidebarItemsData.map(item => (\r\n\r\n                            <MainChannelItem>\r\n                             {item.icon}\r\n                             {item.text}\r\n                            </MainChannelItem>\r\n\r\n                        ))\r\n                    }\r\n                   \r\n                </MainChannels>\r\n                <ChannelsContainer>\r\n                    <NewChannelContainer>\r\n                        <div>\r\n                            Channels\r\n                        </div>\r\n                        <AddIcon onClick = {addChannel} />\r\n                    </NewChannelContainer>\r\n\r\n                    <ChannelsList>\r\n                        \r\n                         {\r\n                           props.rooms.map(item => (\r\n                            <Channel onClick={() => goToChannel(item.id)}>\r\n                              # {item.name}\r\n                            </Channel>\r\n                         ))\r\n                         }\r\n                       \r\n                        \r\n                    </ChannelsList>\r\n                    \r\n                </ChannelsContainer>\r\n            </Container>\r\n      \r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n\r\nconst Container = styled.div\r\n`\r\nbackground-image: linear-gradient(#FD297A , #9424F0);\r\n\r\n`\r\nconst WorkspaceContainer = styled.div\r\n`\r\ncolor: #0D0D0D;\r\nfont-weight:bold;\r\nheight:64px;\r\nfont-size:18px;\r\ndisplay:flex;\r\nalign-items:center;\r\npadding-left:19px;\r\njustify-content: space-between;\r\nborder-bottom: 1px solid #532753;\r\n\r\n`\r\nconst Name = styled.div\r\n`\r\n\r\n`\r\nconst NewMessage = styled.div\r\n`\r\nwidth:36px;\r\nheight:36px;\r\nborder-radius:50%;\r\nbackground:white;\r\ncolor:#3F0E40;\r\nfill: #3F0E40;\r\ndisplay:flex;\r\njustify-content: center;\r\nalign-items:center;\r\nmargin-right:20px;\r\ncursor:pointer;\r\n`\r\n\r\nconst MainChannels = styled.div\r\n`\r\nPadding-top: 20px;\r\n`\r\nconst MainChannelItem = styled.div\r\n`\r\ncolor: #0D0D0D;\r\ndisplay: grid;\r\ngrid-template-columns: 15% auto;\r\nheight:28px;\r\nalign-items:center;\r\npadding-left:40px;\r\ncursor:pointer;\r\n:hover{\r\n    background: #9424F0;\r\n}\r\n`\r\n\r\nconst ChannelsContainer = styled.div\r\n`\r\ncolor: #0D0D0D;\r\nmargin-top:20px;\r\nfont-size: 17px;\r\nfont-weight: bold;\r\n`\r\n\r\nconst NewChannelContainer = styled.div\r\n`\r\n\r\ndisplay: flex;\r\njustify-content: space-between;\r\nalign-items:center;\r\nheight:28px;\r\npadding-left:19px;\r\npadding-right:12px;\r\n\r\n\r\n`\r\n\r\nconst ChannelsList = styled.div\r\n`\r\n\r\n`\r\nconst Channel = styled.div\r\n`\r\nheight: 28px;\r\ndisplay: flex;\r\nalign-items:center;\r\npadding-left: 19px;\r\ncursor: pointer;\r\n:hover{\r\n    background: #9424F0;\r\n}\r\n\r\n`","\nimport './App.css';\nimport { useEffect, useState } from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport Chat from './components/Chat'\nimport Login from './components/Login'\nimport styled from 'styled-components'\nimport Header from './components/Header'\nimport Sidebar from './components/Sidebar'\nimport db from './firebase'\nimport { auth, provider } from './firebase'\n \nimport { ContactSupportOutlined } from '@material-ui/icons';\n\n\nfunction App() {\n\n  const [rooms, setRooms] = useState([])\n  const [user, setUser ]  = useState(JSON.parse(localStorage.getItem('user')));\n\n  const getChannels = () => {\n\n    db.collection('rooms').onSnapshot((snapshot) =>{\n      \n        setRooms(snapshot.docs.map((doc) =>{\n        return {id : doc.id, name: doc.data().name }\n      }))\n\n    })\n  }\n\n  const signOut = () => {\n\n    auth.signOut().then(() => {\n      \n      localStorage.removeItem('user');\n      setUser(null); \n\n    })\n       \n  }\n\n  useEffect(() => {\n\n             getChannels();\n                  }, [] ) \n\n                  console.log(rooms);\n\n                    \n  \n  return (\n    <div className=\"App\">\n      <Router>\n      {\n        !user ?\n        <Login setUser={setUser}/>\n        :\n     \n       \n        <Container>\n          <Header signOut={signOut} user={user} />\n          <Main>\n            <Sidebar  rooms={rooms} />\n              <Switch>\n              <Route path=\"/room/:channelId\">\n              <Chat user={user} />\n                </Route>\n                <Route path=\"/\">\n                  Select or Create a Channel\n                </Route>\n                 \n              </Switch>\n          </Main>\n        </Container>\n       }\n      </Router>\n     \n    </div>\n  );\n}\n\nexport default App;\n\nconst Container = styled.div\n`\nwidth: 100%;\nheight: 100vh;\ndisplay: grid;\ngrid-template-rows:38px minmax(0, 1fr);\n\n\n`\nconst Main =styled.div\n`\n\ndisplay: grid;\ngrid-template-columns: 260px auto;\n\n\n\n`\n\n\n \n\n\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();"],"sourceRoot":""}